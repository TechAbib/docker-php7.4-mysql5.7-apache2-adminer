version: "3.7"

services:

### APPLICATION ##########################################
  app:
    build:
      args:
        user: docker
        uid: 1000
      context: ./
      dockerfile: ./docker/app.Dockerfile
    image: ${APP_NAME}
    container_name: ${APP_NAME}_application
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./app/:/var/www
    networks:
      - docker-php74-application

### MySQL ################################################

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: ${APP_NAME}_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    depends_on:
      - app
    networks:
      - docker-php74-application

### Apache Server ########################################
  apache2:
    image: webdevops/apache:ubuntu-18.04
    container_name: ${APP_NAME}_apache2
    restart: unless-stopped
    environment:
      WEB_DOCUMENT_ROOT: ${APP_DOCUMENT_ROOT}
      WEB_PHP_SOCKET: ${APACHE_PHP_UPSTREAM_CONTAINER}:${APACHE_PHP_UPSTREAM_PORT}
      WEB_PHP_TIMEOUT: ${APACHE_PHP_UPSTREAM_TIMEOUT}
    ports:
      - "${APACHE_HOST_HTTP_PORT}:80"
      - "${APACHE_HOST_HTTPS_PORT}:443"
    volumes:
      - ./app/:/var/www
    networks:
      - docker-php74-application
    depends_on:
      - app

networks:
  docker-php74-application:
    driver: bridge
